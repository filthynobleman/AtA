cmake_minimum_required(VERSION 3.16.3 FATAL_ERROR)
project(AtA_Sequential VERSION 1.0 LANGUAGES C)

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")

add_compile_options(-O3)


option(USE_DOUBLES "Use double precision for floating point values." ON)
set(WHICH_BLAS "MKL" CACHE STRING "Determine CBLAS implementation. Can be MKL or BLAS.")
set(ATA_GEMM "STRASSEN" CACHE STRING "Determine the matrix multiplication algorithm used by ATA. Can be STRASSEN or GEMM.")


if(USE_DOUBLES)
    set(DOUBLE_PRECISION "ON")
    message("Compiling with double precision floating point.")
else()
    message("Compiling with single precision floating point.")
endif()

if (ATA_GEMM STREQUAL "STRASSEN")
    set(ATA_USE_STRASSEN "ON")
    message("ATA will use Strassen's algorithm for matrix multiplication.")
elseif(ATA_GEMM STREQUAL "GEMM")
    message("ATA will use cblas_?gemm for matrix multiplication.")
else()
    message(FATAL_ERROR "The selected GEMM algorithm (${ATA_GEMM}) is not supported.")
endif()

add_executable(TestStrassen test_strassen.c strassen.c)
add_executable(TestAtA test_ata.c ata.c strassen.c)

if(${WHICH_BLAS} STREQUAL "MKL")
    message("Selected MKL BLAS implementation.")
    find_package(MKL REQUIRED)
    if (MKL_FOUND)
        set(USE_MKL "ON")
        include_directories(${MKL_INCLUDE_DIRS})
        link_directories(${MKL_LIBRARIES})
        target_link_libraries(TestStrassen mkl_intel_ilp64 mkl_core mkl_sequential m)
        target_link_libraries(TestAtA mkl_intel_ilp64 mkl_core mkl_sequential m)
    else()
        message(FATAL_ERROR "MKL not found")
    endif()
elseif(${WHICH_BLAS} STREQUAL "BLAS")
    message("Selected system default BLAS implementation.")
    find_package(BLAS REQUIRED)
    if (BLAS_FOUND)
        include_directories(${BLAS_INCLUDE_DIR})
        link_directories(${BLAS_LIBRARIES})
        target_link_libraries(TestStrassen m blas ${BLAS_LIBRARIES}) 
        target_link_libraries(TestAtA m blas ${BLAS_LIBRARIES}) 
    else()
        message(FATAL_ERROR "BLAS not found")
    endif()
else()
    message(FATAL_ERROR "The selected BLAS implementation (${WHICH_BLAS}) is not supported.")
endif()

configure_file(common.h.in ${CMAKE_SOURCE_DIR}/common.h)